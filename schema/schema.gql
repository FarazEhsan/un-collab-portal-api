# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Skill {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!
  _id: ID!

  """Name of the skill"""
  name: String!

  """Level of the skill"""
  level: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SDG {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!

  """ID of the SDG"""
  id: ID!

  """Name of the SDG"""
  name: String!

  """Code of the SDG"""
  code: String!

  """Short description of the SDG"""
  shortDescription: String!

  """Description of the SDG"""
  description: String

  """Pictures related to the SDG"""
  pictures: [String!]
}

type Project {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!

  """ID of the project"""
  _id: ID!

  """Name of the project"""
  name: String!

  """Project Start time"""
  startTime: String!

  """Project end time"""
  endTime: String

  """Description of the project"""
  description: String!
  relatedSDGs: [SDG!]!

  """Pictures"""
  pictures: [String!]

  """User who created the project"""
  user: User!
}

type Group {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!

  """ID of the group"""
  _id: ID!

  """Name of the group"""
  name: String!

  """Code of the group"""
  description: String!
}

type User {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!
  _id: ID!

  """Name of the User"""
  name: String!

  """First Name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Username for the portal"""
  userName: String!

  """User Email"""
  email: String!

  """User Picture"""
  picture: String

  """Date of Birth"""
  dob: String
  age: Int!

  """Contact number of the user"""
  contactNumber: String

  """Facebook link"""
  facebook: String

  """instagram link"""
  instagram: String

  """twitter link"""
  twitter: String

  """tiktok link"""
  tiktok: String

  """linkedin link"""
  linkedin: String

  """City of the user"""
  city: String

  """Country of the user"""
  country: String
  skills: [Skill!]!
  projects: [Project!]!
  groups: [Group!]!
}

type Reaction {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!

  """Type of the reaction enum: [UPVOTE, DOWNVOTE]"""
  type: String!
  user: User!

  """Comment of the reaction"""
  comment: Comment

  """Topic of the reaction"""
  topic: String
}

type ReactionCount {
  _id: String!
  count: Float!
}

type Topic {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!

  """Id of the topic"""
  _id: ID!

  """Title of the topic"""
  title: String!

  """Description of the topic"""
  description: String!
  author: User!

  """Images related to the topic"""
  images: [String!]
  reactions: [Reaction!]!
  comments(limit: Int, skip: Int): [Comment!]!
  commentsCount: Int!
  reactionCounts: [ReactionCount!]!
}

type Comment {
  """
  Operation performed on the document, 0 for create, 1 for update, 2 for delete
  """
  updOperation: Float!

  """Time of creation of the document"""
  createdAt: DateTime!

  """Time of updation of the document"""
  updatedAt: DateTime!

  """Id of the topic"""
  _id: ID!

  """Text of the comment"""
  text: String!
  author: User!

  """Topic of the comment"""
  topic: Topic!
  parentComment: Comment
  reactions: [Reaction!]!
  reactionCounts: [ReactionCount!]!
}

type Query {
  allusers: [User!]!
  user(id: String!): User!
  allskills: [Skill!]!
  skill(id: Int!): Skill!
  allsdgs: [SDG!]!
  allProjects: [Project!]!
  project(id: String!): Project!
  allgroups: [Group!]!
  alltopics: [Topic!]!
  topic(id: String!): Topic!
  allcomments: [Comment!]!
  comment(id: String!): Comment!
  allreactions: [Reaction!]!
  reaction(id: String!): Reaction!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createSkill(createSkillInput: CreateSkillInput!): Skill!
  removeSkill(id: Int!): Skill!
  create(createSDGInput: CreateSDGInput!): SDG!
  createProject(createProjectInput: CreateProjectInput!): Project!
  updateProject(id: String!, updateProjectInput: UpdateProjectInput!): Project!
  createGroup(createGroupInput: CreateGroupInput!): Group!
  createComment(createCommentInput: CreateCommentDTO!): Comment!
  createReaction(createReactionInput: CreateReactionDTO!): Reaction!
  removeReaction(id: String!): Reaction!
  removeByUserAndTopic(user: String!, topic: String!): Reaction!
  removeByUserAndComment(user: String!, comment: String!): Reaction!
}

input CreateUserInput {
  """ID of the user"""
  _id: ID!

  """Name of the User"""
  name: String!

  """First Name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Username for the portal"""
  userName: String!

  """User Email"""
  email: String!

  """User Picture"""
  picture: String

  """Date of Birth"""
  dob: String = ""

  """Contact number of the user"""
  contactNumber: String

  """Facebook link"""
  facebook: String = ""

  """instagram link"""
  instagram: String = ""

  """twitter link"""
  twitter: String = ""

  """tiktok link"""
  tiktok: String = ""

  """linkedin link"""
  linkedin: String = ""

  """City of the user"""
  city: String

  """Country of the user"""
  country: String

  """Skills of the user"""
  skills: [ID!]

  """Groups of the user"""
  groups: [ID!]
}

input UpdateUserInput {
  name: String

  """First Name of the user"""
  firstName: String

  """Last name of the user"""
  lastName: String
  userName: String
  email: String

  """User Picture"""
  picture: String
  dob: String
  contactNumber: String

  """Facebook link"""
  facebook: String

  """instagram link"""
  instagram: String

  """twitter link"""
  twitter: String

  """tiktok link"""
  tiktok: String

  """linkedin link"""
  linkedin: String
  city: String
  country: String
  skills: [ID!]

  """Groups of the user"""
  groups: [ID!]
}

input CreateSkillInput {
  """Name of the skill"""
  name: String!

  """Level of the skill"""
  level: String!
}

input CreateSDGInput {
  """Name of the SDG"""
  name: String!

  """Code of the SDG"""
  code: String!

  """Short description of the SDG"""
  shortDescription: String!

  """Description of the SDG"""
  description: String = ""

  """Pictures related to the SDG"""
  pictures: [String!] = []
}

input CreateProjectInput {
  """Name of the project"""
  name: String!

  """Project Start time"""
  startTime: String!

  """Project end time"""
  endTime: String = ""

  """Description of the project"""
  description: String!

  """Related SDGs of the project"""
  relatedSDGs: [String!] = []

  """Pictures"""
  pictures: [String!] = []

  """User who created the project"""
  user: ID!
}

input UpdateProjectInput {
  """Name of the project"""
  name: String

  """Project Start time"""
  startTime: String

  """Project end time"""
  endTime: String

  """Description of the project"""
  description: String

  """Related SDGs of the project"""
  relatedSDGs: [String!]

  """Pictures"""
  pictures: [String!]

  """User who created the project"""
  user: ID
}

input CreateGroupInput {
  """Name of the group"""
  name: String!

  """Code of the group"""
  description: String!
}

input CreateCommentDTO {
  """Text of the comment"""
  text: String!

  """Author/User of the comment"""
  author: ID!

  """Topic of the comment"""
  topic: ID!

  """Parent comment of the comment"""
  parentComment: ID

  """Reactions of the comment"""
  reactions: [ID!]!
}

input CreateReactionDTO {
  """Type of the reaction enum: [UPVOTE, DOWNVOTE]"""
  type: ReactionType!

  """User of the reaction"""
  user: ID!

  """Comment of the reaction"""
  comment: ID

  """Topic of the reaction"""
  topic: ID
}

"""The basic reactions"""
enum ReactionType {
  Like
  Dislike
}